C51 COMPILER V9.60.7.0   MAIN                                                              03/06/2025 15:22:02 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\Keil5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <STC12C5A60S2.H>
   2          #include <stdio.h>
   3          #include <intrins.h>
   4          #include <lcd1602.h>
   5          #include <ICC.h>
   6          
   7          //#include <DS1302.h>
   8          #define uchar unsigned char
   9          #define uint unsigned int
  10            
  11          sbit switch_ = P2^0;
  12          sbit Bee = P2^3;
  13          
  14          uint lock_time = 0;
  15          uint lock_stata = 0;//锁定状态，1为锁定，0为正常
  16          
  17          void bee()
  18          {
  19   1        uint times = 50;
  20   1        while(times--)
  21   1        {
  22   2        Bee=1;
  23   2        DelayMs(20);
  24   2        Bee=0;
  25   2        DelayMs(20);
  26   2        }
  27   1      }
  28          
  29          void T0_time_Init()
  30          {
  31   1        TMOD = 0x01;    //第一步：配置TMOD    //  0000 0001 ； 选择方式1
  32   1        TH0 = 0xfc;
  33   1        TL0 = 0x18;   // 第二步：赋初值     //  0xfc18 = 64536.  定时1000us = 1ms （500HZ）
  34   1        TR0 = 1;      //第三步：配置TCON    // 定时方式，选择定时器 T0
  35   1        ET0 = 1;                  // 定时器/计数器0中断允许位，打开T0中断
  36   1        EA = 1; 
  37   1      }
  38          
  39          
  40          void timer0() interrupt 1
  41          {
  42   1        lock_time++;
  43   1        if(lock_time == 2671)//14
  44   1        {
  45   2          lock_stata = 0;
  46   2          LcdShowInit();
  47   2          bee();
  48   2        }
  49   1      }
  50          
  51          // 延时函数
  52          void delay(uint z) {
  53   1          uint i, j;
  54   1          for (i = z; i > 0; i--)
C51 COMPILER V9.60.7.0   MAIN                                                              03/06/2025 15:22:02 PAGE 2   

  55   1              for (j = 110; j > 0; j--);
  56   1      }
  57          
  58          // 检测按键并返回按键编号
  59          uchar keyscan() {
  60   1          uchar i, j;
  61   1          for (i = 0; i < 4; i++) {
  62   2              P0 = ~(1 << i); // 将P0口的某一位置低电平
  63   2              for (j = 0; j < 4; j++) {
  64   3                  if (!(P0 & (0x10 << j))) { // 检测是否有按键按下
  65   4                      delay(20); // 消抖
  66   4                      if (!(P0 & (0x10 << j))) { // 再次检测按键状态
  67   5                          while (!(P0 & (0x10 << j))); // 等待按键释放
  68   5                          return j * 4 + i; // 返回按键编号，先从左到右再从上到下
  69   5                      }
  70   4                  }
  71   3              }
  72   2          }
  73   1          P0 = 0x0f; // 将P0口的低四位置高电平
  74   1          return 0xFF; // 没有按键按下
  75   1      }
  76          
  77          void Lock()
  78          {
  79   1        lock_time =0;
  80   1        T0_time_Init();
  81   1      }
  82          
  83          
  84          
  85          
  86          uint password[15]={2,0,2,5,0,0,0,0,0,0,0,0,0,0,0};
  87          uint Input_password[15] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
  88          uint passwordLength = 0;
  89          uint wrongtimes = 0;
  90          uint res =0;//0不通过  1通过
  91          uint set_mode = 0; //0为正常模式  1为输入模式
  92          uint Safe_mode = 0;//0为正常模式，1为安全模式
  93          uint off_switch = 0;//0为正常模式，1为关闭模式
  94          uint time = 11000;//休眠时间
  95          uint Count = 11000;//休眠时间计数
  96          
  97          void Clear_password()
  98          {
  99   1        uint i = 0;
 100   1        for(i = 0;i<15;i++)
 101   1        {
 102   2          Input_password[i] = 0;
 103   2          password[i] = 0;
 104   2        }
 105   1      }
 106          
 107          
 108          void Set_password()
 109          {
 110   1        uint i =0;
 111   1        for(;i<15;i++)
 112   1        {
 113   2          uchar num ;
 114   2          num = Input_password[i];
 115   2          AT24C02_WriteOneByte(i,num);
 116   2          Delay_Write();
C51 COMPILER V9.60.7.0   MAIN                                                              03/06/2025 15:22:02 PAGE 3   

 117   2        }
 118   1      }
 119          
 120          void Set_Init_password()
 121          {
 122   1        uint i =0;
 123   1        for(;i<15;i++)
 124   1        {
 125   2          uchar num ;
 126   2          num = password[i];
 127   2          AT24C02_WriteOneByte(i,num);
 128   2          Delay_Write();
 129   2        }
 130   1      }
 131          
 132          void password_Init()
 133          {
 134   1        uint i =0;
 135   1        for(;i<15;i++)
 136   1        {
 137   2          uchar num = AT24C02_ReadOneByte(i);
 138   2          password[i]=num;
 139   2        
 140   2        }
 141   1      }
 142          
 143          void confirm()    //确认输入结果
 144          {
 145   1        uint i = 0;
 146   1        if(set_mode==0)  //正常确认模式
 147   1        {
 148   2          for(i =0;i<15;i++)
 149   2          {
 150   3          
 151   3          if(Input_password[i]!=password[i])
 152   3          {
 153   4            res = 0;
 154   4            break;
 155   4          }
 156   3          res = 1;
 157   3          }
 158   2      
 159   2          if(res == 0)
 160   2          {
 161   3            wrongtimes +=1;
 162   3            LcdGotoXY(1,0);
 163   3            LcdPrintStr("wrong password!         ");  // 第1行显示
 164   3            if(wrongtimes==3)
 165   3            {
 166   4              lock_stata = 1;
 167   4              LcdGotoXY(1,0);
 168   4              LcdPrintStr("Locking........"); // 第1行显示
 169   4              bee();
 170   4              Lock();
 171   4              passwordLength = 0;
 172   4              wrongtimes=0;
 173   4              
 174   4            }
 175   3            
 176   3          }
 177   2      
 178   2          if(res==1)
C51 COMPILER V9.60.7.0   MAIN                                                              03/06/2025 15:22:02 PAGE 4   

 179   2          {
 180   3            wrongtimes =0;
 181   3            LcdGotoXY(1,0);
 182   3            LcdPrintStr("passed!               ");  // 第1行显示
 183   3            passwordLength=0;
 184   3            switch_ = 1;//继电器开
 185   3          }
 186   2        }
 187   1        
 188   1        if(set_mode==1)    //设置密码
 189   1        {
 190   2          for(i =0;i<15;i++)
 191   2          {
 192   3            password[i]=Input_password[i];
 193   3          }
 194   2          set_mode=0;//退出设置模式
 195   2          res=0;//退出正确输入状态
 196   2          Set_password();
 197   2          LcdGotoXY(1,0);
 198   2          LcdPrintStr("Reload Successfully!      ");  // 第1行显示
 199   2          DelayMs(5000);
 200   2          LcdShowInit();
 201   2          switch_= 0;//继电器关
 202   2          passwordLength = 0;
 203   2        }
 204   1        
 205   1      
 206   1      }
 207            
 208          void del()    //退格
 209          {
 210   1        Input_password[passwordLength-1]=0;
 211   1        LcdGotoXY(0,passwordLength-1);
 212   1        LcdPrintStr(" ");
 213   1      }
 214          
 215          void Setcode()     //设置新密码 ，需要在正确输入密码情况下设置，否则无效
 216          {
 217   1        if(res ==1)
 218   1        {
 219   2          LcdGotoXY(0,0);
 220   2          LcdPrintStr("                    ");  // 第1行显示
 221   2          LcdGotoXY(1,0);
 222   2          LcdPrintStr("Setting......               ");  // 第1行显示
 223   2          set_mode = 1;
 224   2        }
 225   1        else
 226   1        {
 227   2          set_mode=0;
 228   2        }
 229   1      }
 230          
 231          void Safe_code()
 232          {
 233   1        uint i = 0 ;
 234   1        if(Safe_mode==1)
 235   1        {
 236   2          for(;i<passwordLength;i++)
 237   2          {
 238   3            LcdGotoXY(0,i);
 239   3            LcdPrintStr("*");
 240   3          }
C51 COMPILER V9.60.7.0   MAIN                                                              03/06/2025 15:22:02 PAGE 5   

 241   2        }
 242   1        if(Safe_mode==0)
 243   1        {
 244   2          
 245   2          for(;i<passwordLength;i++)
 246   2          {
 247   3            LcdGotoXY(0,i);
 248   3            display_key_on_lcd(Input_password[i]);
 249   3          }
 250   2        }
 251   1      }
 252          
 253          void Sleep()
 254          {
 255   1        if(off_switch ==1)
 256   1        {
 257   2          LcdOff();
 258   2        }
 259   1        if(off_switch ==0)
 260   1        {
 261   2          LcdOn();
 262   2        }
 263   1      
 264   1      }
 265          
 266          
 267          /*********************************************************/
 268          // 主函数
 269          /*********************************************************/
 270          
 271          
 272          void main() 
 273          {
 274   1        LcdInit();                // 液晶功能初始化 
 275   1        LcdShowInit();
 276   1        password_Init();
 277   1        //Set_Init_password();
 278   1        switch_ = 0;//继电器关
 279   1      
 280   1        while(1)
 281   1        {
 282   2          uchar keynum = keyscan();
 283   2          Sleep();
 284   2          if(keynum !=0xff)
 285   2          {
 286   3            off_switch = 0;
 287   3            Count = time;
 288   3            if(lock_stata ==0)
 289   3            {
 290   4              switch (keynum)
 291   4              {
 292   5              
 293   5                case 10://确认
 294   5                  confirm();
 295   5                  
 296   5                break;
 297   5      
 298   5                case 11: //退格
 299   5                  del();
 300   5                  passwordLength-=1;
 301   5                break;
 302   5                
C51 COMPILER V9.60.7.0   MAIN                                                              03/06/2025 15:22:02 PAGE 6   

 303   5                case 12: //设置新密码
 304   5                Setcode();
 305   5                Clear_password();
 306   5                break;
 307   5                case 13://关闭密码锁
 308   5                res =0 ;
 309   5                set_mode=0;
 310   5                passwordLength=0;
 311   5                switch_ = 0;//继电器关
 312   5                LcdShowInit();
 313   5                break;
 314   5      
 315   5      
 316   5                case 14://安全模式，即输入密码不可见形式
 317   5                Safe_mode = 1-Safe_mode;
 318   5                Safe_code();
 319   5                break;
 320   5                
 321   5                case 15: //强制休眠开关
 322   5                off_switch = 1-off_switch;
 323   5                Sleep();
 324   5                break;
 325   5      
 326   5                default : //按键输入显示
 327   5                LcdGotoXY(0,passwordLength);
 328   5                if(Safe_mode==1)
 329   5                {
 330   6                  LcdPrintStr("*");
 331   6                }
 332   5                else
 333   5                {
 334   6                  display_key_on_lcd(keynum);
 335   6                }
 336   5                Input_password[passwordLength]=keynum;
 337   5                passwordLength+=1;
 338   5                break;
 339   5      
 340   5              }
 341   4              if(passwordLength==-1){passwordLength=0;}
 342   4              if(passwordLength==17){passwordLength=16;}
 343   4            }
 344   3            
 345   3            
 346   3          
 347   3          }
 348   2          Count--;
 349   2          if(Count==0)
 350   2          {
 351   3            off_switch = 1;
 352   3          }
 353   2        }
 354   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1197    ----
   CONSTANT SIZE    =    145    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     80      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.60.7.0   MAIN                                                              03/06/2025 15:22:02 PAGE 7   

END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
